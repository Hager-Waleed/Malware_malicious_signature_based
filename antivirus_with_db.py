import psutil
import hashlib
import os
import threading
import kill
import sqlite3
from sqlite3 import Error
import os.path

def get_running_processes():
    i= 0
    listOfProcessNames = list()
    filenames = list()
    # Iterate over all running processes
    for proc in psutil.process_iter():
       i = i+1
       # Get process detail as dictionary
       pInfoDict = proc.as_dict(attrs=['pid', 'name','username'])
       filename = proc.cmdline()

       if pInfoDict ['username'] != 'root':
           pInfoDict['path']= filename[0]
           #print(filename)
       else:
           pInfoDict['path'] = filename
       listOfProcessNames.append(pInfoDict)
    return listOfProcessNames , i


#########################################
def get_hash (x):
    sha256_hash = hashlib.sha256()
    with open(x, "rb") as f:
    # Read and update hash string value in blocks of 4K
        for byte_block in iter(lambda: f.read(4096), b""):
            sha256_hash.update(byte_block)
    return  sha256_hash.hexdigest()

def select_hash():
    conn = None
    hash_ = list()
    conn = sqlite3.connect('/home/hager/harming_signatures.db')
    cur = conn.cursor()
    cur.execute("SELECT hash FROM signature")
    list_ =cur.fetchall()
    for i in list_:
        hash_.append(list_[0][0])
    return hash_

def anti_virus():
    threading.Timer(10.0, anti_virus).start()
    listOfRunningProcess,count = get_running_processes()
    flag = False
    is_killed = False

    #Signature = get_hash('virus.py')
    #Signature = '2cb7a3d86bc5f285c72e05326a986743c33bcb4fe467150f1989350f84ae1a0f'
    sha256_hash = hashlib.sha256()

    ###########Scan all files#################3
    folder = '/home'
    all_files_path = list()
    all_files_hashs = list()
    list_of_signatures = select_hash()
    # list_of_signatures.append(Signature)
    # list_of_signatures.append('bd11274424bcd96a5075dfce693404efbc8da1987349b62bbe359aedf9aa8189')
    for dirname, dirs, files in os.walk(folder):
        for filename in files:
            all_files_path.append(dirname +'/'+filename)

    for x in all_files_path:
        sha256_hash = hashlib.sha256()
        try:
            with open(x, "rb") as f:
                # Read and update hash string value in blocks of 4K
                for byte_block in iter(lambda: f.read(4096), b""):
                    sha256_hash.update(byte_block)
                all_files_hashs.append(sha256_hash.hexdigest())
                if  sha256_hash.hexdigest() in list_of_signatures:
                    print('there is a malicious file at :' + x)
        except:
            pass


    #############Runinng processes###############
    for elem in listOfRunningProcess:
        if elem['username'] != 'root':
            try:
                sha256_hash = hashlib.sha256()
                with open(elem['path'], "rb") as f:
                    # Read and update hash string value in blocks of 4K
                    for byte_block in iter(lambda: f.read(4096), b""):
                        sha256_hash.update(byte_block)
                    if str(sha256_hash.hexdigest()) in list_of_signatures:

                        flag = True
                        kill.kill(elem['pid'])
                        is_killed = True

            except :
                pass


    if flag ==True:
            print('Found a virus !')
    else:
        print('there is no harming Process')
    if is_killed == True:
        print('killed !')

anti_virus()
#select_hash()

